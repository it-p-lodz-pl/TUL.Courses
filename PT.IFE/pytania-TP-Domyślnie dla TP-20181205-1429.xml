<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<!-- question: 0  -->
  <question type="category">
    <category>
        <text>$course$/Domyślnie dla TP/Kolokwium/Srednio trudne</text>

    </category>
  </question>

<!-- question: 85048  -->
  <question type="matching">
    <name>
      <text>Dziedziczenie</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><span style="font-family: Calibri; font-size: medium;">[Termin 1] w programowaniu obiektowym to mechanizm pozwalający tworzyć nowe klasy na podstawie już istniejących. Nową klasę nazywamy klasą [Termin 2], podklasą lub klasą potomną, zaś klasę, na bazie której tworzymy klasę [Termin 2], nazywamy klasą [Termin 3], nadklasą lub klasą podstawową. W wyniku [Termin 1], klasa [Termin 2] otrzymuje ([Termin 1]) wszystkie pola i metody klasy [Termin 3].</span></p>
<p><span style="font-family: Calibri; font-size: medium;">Dopasuj terminy.</span></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>6.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <shuffleanswers>false</shuffleanswers>
    <correctfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest poprawna.</p>]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest częściowo poprawna.</p>]]></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest niepoprawna.</p>]]></text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text><![CDATA[<p><span style="font-family: Calibri; font-size: medium;">Termin 1</span></p>]]></text>
      <answer>
        <text>Dziedziczenie</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>Termin 2</p>]]></text>
      <answer>
        <text>pochodna</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p><span style="line-height: 115%; font-family: 'Calibri','sans-serif'; font-size: 11pt; mso-ansi-language: PL; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;" lang="PL">Termin 3</span></p>]]></text>
      <answer>
        <text>bazowa</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>polimorfizm</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>abstrakcja</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>implementacja</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>wariantowa</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>generyczna</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>pierwotna</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>źródłowa</text>
      </answer>
    </subquestion>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
        <text>$course$/Domyślnie dla TP/Kolokwium/Trudne</text>

    </category>
  </question>

<!-- question: 84929  -->
  <question type="matching">
    <name>
      <text>Informacja a dane</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Informatyka to dziedzina zajmująca się automatyzacją procesów przetwarzania [termin 1]. Aby opisać proces przetwarzania [termin 1], niezbędny jest [termin 2], który określa sekwencję operacji, jakie maja być wykonane w celu przetworzenia zbioru [termin 1] wejściowej w zbiór [termin 1] wynikowej. Problem w tym, że [termin 1] i [termin 2]są abstrakcyjne – to rodzaj wiedzy o tym, co i jak przetwarzać. W konsekwencji nie mogą być bezpośrednio wykorzystane przez współczesne materialne maszyny zbudowane wokół znanych praw fizycznych. Aby je zmaterializować wykorzystuje się [termin 4] do reprezentowania [termin 1] i [termin 2]. [termin 4] pozwala na formalne opisanie [termin 1] i [termin 2] w postaci programu. Podstawą materializacji jest alfabet, który jest ciągiem znaków alfanumerycznych reprezentowanych w środowisku współczesnej maszyny przetwarzającej, jako skończony ciąg bitów. Po kompilacji program może być uruchomiony z wykorzystaniem wybranego środowiska wykonawczego, co oznacza utworzenie [termin 5]. [termin 5] to zbiór wątków, z których każdy odpowiada za realizację sekwencji instrukcji opisanych w programie i [termin3], które tworzone są w trakcie realizacji wątku. Warunkiem utworzenia [termin 5] jest nadanie mu [termin 6], która dziedziczona jest po sesji, jeśli program uruchamiany jest przez użytkownika w ramach istniejącej sesji lub skonfigurowana, jeśli program (usługa) uruchomiany jest przez system operacyjny lub w imieniu innego użytkownika. [termin 6] [termin 5] jest wykorzystywana do autoryzacji operacji, których wykonania [termin 5] może żądać od otoczenia, przykładowo systemu operacyjnego. Brak możliwości wykonania takiej operacji powoje wystąpienie wyjątku, który musi być obsłużony, bo inaczej powoduje przerwanie działania wątku, co w konsekwencji może spowodować przerwanie zakończenie [termin 5].</p>
<p> </p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>10.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <shuffleanswers>false</shuffleanswers>
    <correctfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest poprawna.</p>]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest częściowo poprawna.</p>]]></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest niepoprawna.</p>]]></text>
    </incorrectfeedback>
    <shownumcorrect/>
    <subquestion format="html">
      <text><![CDATA[<p>&lt;termin1&gt;</p>]]></text>
      <answer>
        <text>informacja</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p><span style="line-height: 115%; font-family: 'Calibri','sans-serif'; font-size: 11pt; mso-ansi-language: PL; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;" lang="PL">&lt;termin2&gt; </span></p>]]></text>
      <answer>
        <text>algorytm</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>&lt;termin3&gt;</p>]]></text>
      <answer>
        <text>dane</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>&lt;termin4&gt;</p>]]></text>
      <answer>
        <text>język programowania</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p>&lt;termin5&gt;</p>]]></text>
      <answer>
        <text>proces</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text><![CDATA[<p><span style="line-height: 115%; font-family: 'Calibri','sans-serif'; font-size: 11pt; mso-ansi-language: PL; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;" lang="PL">&lt;termin 6&gt; </span></p>]]></text>
      <answer>
        <text>tożsamość</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>dokument</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>plik</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>wiedza</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>uprawnienie</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>podpis cyfrowy</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>skrypt</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>zadaniy</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>oczekiwane działanie</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>nazwa</text>
      </answer>
    </subquestion>
    <subquestion format="html">
      <text></text>
      <answer>
        <text>tekst</text>
      </answer>
    </subquestion>
  </question>

<!-- question: 84739  -->
  <question type="multichoice">
    <name>
      <text>Architektura aplikacji</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>W celu ułatwienia pracy zespołowej i testowania zwykle w architektura aplikacji wyróżnia się możliwie niezależne warstwy o dedykowanych funkcjach zależnych od wybranego modelu. W trakcie zajęć odwoływaliśmy się do modeli:</p>
<ul>
<li>Prezentacja, logika, dane</li>
<li>Widok, model widoku i model (MVVM)</li>
</ul>
<p>Jakie koncepcje, konstrukcje językowe i technologie można wykorzystać w realizacji takiego podejścia:</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>10.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>abc</answernumbering>
    <correctfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest poprawna.</p>]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest częściowo poprawna.</p>]]></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest niepoprawna.</p>]]></text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>Abstrakcja (Interfejs, klasa abstrakcyjna), która pozwala ukryć nieistotne szczegóły implementacyjne przed użytkownikami warstwy i pozwala pracować jednocześnie na bazie wspólnego kontraktu.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To jest dobra odpowiedz, faktycznie abstrakcja ułatwia zastosowanie architektury warstwowej</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Technologii LINQ (Language Integrated Query), która pozwala na standaryzację dostępu do danych z interfejsu warstwy.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To niepoprawna odpowiedź – LINQ umożliwia tworzenie wyrażeń, które mają na celu wybór podzbioru elementów ze zbioru źródłowego.  Za funkcjonalność odpowiedzialne są metody i właściwości w klasach.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>Żadne specjalistyczne koncepcje, konstrukcje i technologie nie są niezbędne, aby zastosować w praktyce wybraną architekturę warstwową.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p><span style="line-height: 115%; font-family: 'Calibri','sans-serif'; font-size: 11pt; mso-ansi-language: PL; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;" lang="PL">To jest również poprawna odpowiedź, jednak w praktyce trzeba jakoś istnienie warstw zasygnalizować, np. klasy częściowe, przestrzenie nazw, klay, itp.</span></p>]]></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>Kompilacja rozłączna, która pozwala tworzyć osobne niezależnie opracowywane i testowane komponenty.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To oczywiście poprawna odpowiedź, kompilacja rozłączna jest podstawowym narzędziem do implementacji warstw i zapewnienia niezależności warstwy od jej użytkownika.)</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Refleksja, która umożliwia dostęp do metadanych programu (warstwy) i używanie warstwy bez bezpośredniego dostępu do definicji oferowanej funkcjonalności na jej granicy.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>O ile refleksja może się przydać w niektórych szczególnych przypadkach do implementacji warstw, to nie jest to technologia bazowa dla tej koncepcji. W związku z tym odpowiedzi tej nie można uznać za poprawną.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Polimorfizm, który pozwala warstwie użytkownika zaimplementować wybraną funkcjonalność na kilka różnych sposobów.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Jest to złą odpowiedź, Polimorfizm, jak zaznaczono w odpowiedzi, wpływa na realizację funkcjonalności, a nie na to, co jest oferowane w zakresie funkcjonalności. .</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 85039  -->
  <question type="multichoice">
    <name>
      <text>Klasa generyczna</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Klasa generyczna pozwala parametryzować typy, które są w niej używane, np. typy parametrów, typy zwracanych wartości, itd. Parametryzacja wprowadza jednak problem, że definicja jest niedookreślona, czyli wyłącznie na jej podstawie nie można wnioskować o semantycznej poprawności kodu – nie można zawsze sprawdzić zgodności typów. Zaznacz, które z powyższych stwierdzeń są prawdziwe:</p>
<address>Uwaga: Nieprawidłowe odpowiedzi są karane punktami ujemnymi.</address>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>10.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>abc</answernumbering>
    <correctfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest poprawna.</p>]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest częściowo poprawna.</p>]]></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest niepoprawna.</p>]]></text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>Zawsze wykorzystanie klasy musi zawierać wystarczająco dużo informacji - określenie parametru, aby kontrola zgodności typów była możliwa na etapie kompilacji kodu.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Dobrze, klasa w momencie tworzenia obiektu lub dziedziczenia musi być dookreślona przez podanie typu konkretnego lub parametru klasy pochodnej, a zatem pełna kontrola zgodności typów jest możliwa na etapie kompilacji.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Dzięki wprowadzeniu ograniczeń na typ parametru klasy można wyeliminować problem z brakiem dookreślenia.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Źle, ograniczenia na typ parametru nie mają związku z kontrolą zgodności, a jedynie określają dodatkowe cechy parametru, które mogą być wykorzystane przy implementacji klasy.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Jeśli kontrola zgodności typów parametru klasy generycznej nie jest możliwa na etapie kompilacji, kontrola ta jest realizowana na etapie wykonania programu.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Źle, aby utworzyć obiekt klasy generycznej trzeba zdefiniować jej parametr typu, więc kontrola zgodności typów parametru klasy generycznej na etapie kompilacji jest zawsze możliwa. W trakcie realizacji programu kontrola typów jest realizowana wyłącznie w momencie rzutowania (ang. cast) wybranej wartości na typ zmiennej i jest realizowana tak samo jak dla typów niegenerycznych.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Aby klasa generyczna stała się klasą konkretną, przykładowo można utworzyć klasę pochodną (dziedziczącą z niej) i tak określić parametr typu.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Źle, w trakcie dziedziczenia powstaje nowy typ, a więc nie można powiedzieć, że dziedziczenie to jest metodą definiowania parametru.  Choć prawdą jest, że dziedzicząc po klasie generycznej musimy zdefiniować jej parametr typu, który może być typem konkretnym lub własnym parametrem typu, jeśli klasa pochodna też jest generyczna.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>Wprowadzenie ograniczeń na typ parametru klasy generycznej ogranicza użytkownika tej klasy, co do zakresu jej wykorzystania, ale w zamian daje autorowi klasy możliwość skorzystania z określonych cech wynikających z wprowadzenia ograniczenia.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Dobrze, wszystkie ograniczenia na typ parametru klasy generycznej mają na celu wskazanie dodatkowych cech, a więc zmniejszenie dopuszczalnego zbioru typów, które mogą być wykorzystane, jako parametr, co oczywiście pozwala na skorzystanie z cech wynikających z ograniczenia.</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
        <text>$course$/Domyślnie dla TP/Kolokwium/Srednio trudne</text>

    </category>
  </question>

<!-- question: 85049  -->
  <question type="multichoice">
    <name>
      <text>LINQ – zmienna źródłowa</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>LINQ to technologia pozwalająca na selektywny dostęp do elementów wybranego źródła danych, który w programie jest reprezentowany w postaci obiektu. Jakie warunki musi spełnić klasa obiektu, który może być zmienną źródłową w wyrażeniu LINQ. Które z poniższych stwierdzeń spełnia wymagania warunkui koniecznego ?</p>
<p>Uwaga: Nieprawidłowe odpowiedzi są karane punktami ujemnymi.</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>8.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <single>false</single>
    <shuffleanswers>false</shuffleanswers>
    <answernumbering>abc</answernumbering>
    <correctfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest poprawna.</p>]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest częściowo poprawna.</p>]]></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest niepoprawna.</p>]]></text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>Musi implementować IQuerable lub IEnumarable.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Tak to prawda musi implementować IEnumarable.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-20" format="html">
      <text><![CDATA[<p>Musi implementować IQuerable</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To nie jest niezbędne dla zmiennej źródłowej w ogólnym przypadku</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>Musi implementować IEnumarable.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Tak to prawda musi implementować IEnumarable.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Musi implementować IDisposable</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To zła odpowiedź, implementacja IDisposable nie ma tu znaczenia.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-20" format="html">
      <text><![CDATA[<p>Aby mogła reprezentować dane zewnętrzne musi implementować IQuerable lub IEnumarable.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Musi implementować IQuerable, a więc nie wystarczy implementacja IEnumarable</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>Aby mogła reprezentować dane zewnętrzne musi implementować IQuerable</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Tak, musi implementować IQuerable, by można było zaimplementować mechanizm dostępu do zewnętrznego źródła.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-20" format="html">
      <text><![CDATA[<p>Aby mogła reprezentować dane zewnętrzne musi implementować IEnumarable</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To nie jest wystarczające, ponieważ uniemożliwia zaimplementowanie mechanizmów dostępu do zewnętrznego źródła.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Aby mogła reprezentować dane zewnętrzne musi implementować IDisposable</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To zła odpowiedź, implementacja IDisposable nie ma tu znaczenia, choć często te zmienne implementują ten interfejs by umożliwić kontrolę dostępu do zewnętrznych źródeł.</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
        <text>$course$/Domyślnie dla TP/Kolokwium/Trudne</text>

    </category>
  </question>

<!-- question: 85052  -->
  <question type="multichoice">
    <name>
      <text>LINQ to SQL</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>LINQ to rozszerzalna (adoptowalna do indywidualnych potrzeb, np. zapewnienie dostępu do własnych źródeł danych) technologia, w które zdefiniowano metody rozszerzające interfejsy IEnumerable i IQuerable.  Jednym z takich rozszerzeń jest LINQ to SQL. Wybierz poprawne w kontekście tej technologii stwierdzenia.</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>10.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>abc</answernumbering>
    <correctfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest poprawna.</p>]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest częściowo poprawna.</p>]]></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest niepoprawna.</p>]]></text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="-25" format="html">
      <text><![CDATA[<p>Rozszerzenie zrealizowano dodając nowe metody rozszerzające interfejs IEnumerable.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To nie jest możliwe, ponieważ jedyną możliwością rozszerzenia technologii LINQ jest własna implementacja interfejsu IQuerable.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text><![CDATA[<p>Rozszerzenie zrealizowano dodając nowe metody rozszerzające interfejs IQuerable.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To nie jest możliwe, ponieważ jedyną możliwością rozszerzenia technologii LINQ jest własna implementacja interfejsu IQuerable.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text><![CDATA[<p>Rozszerzenie zrealizowano odpowiednio implementując interfejs IEnumerable.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To nie jest możliwe, ponieważ ten interfejs nie ma składowych umożliwiających zrealizowanie dostępu do zewnętrznych źródeł danych.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>Rozszerzenie zrealizowano odpowiednio implementując interfejs IQuerable.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To poprawna odpowiedź, ponieważ jedyną możliwością rozszerzenia technologii LINQ jest własna implementacja interfejsu IQuerable.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="50" format="html">
      <text><![CDATA[<p>Rozszerzenie zrealizowano dodając nowe klasy implementujące interfejs IQuerable</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To poprawna odpowiedź, ponieważ jedyną możliwością rozszerzenia technologii LINQ jest własna implementacja interfejsu IQuerable, za którą odpowiedzialne są te klasy.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-25" format="html">
      <text><![CDATA[<p>Rozszerzenie zrealizowano dodając nowe klasy w przestrzeni nazw System.Data.Linq</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To nie jest prawda, ponieważ jedyną możliwością rozszerzenia technologii LINQ jest własna implementacja interfejsu IQuerable, a umieszczenie klas w wybranej przestrzeni nie jest równoważne z tym warunkiem. Ale prawdą jest, że ta przestrzeń zawiera klasy odpowiedzialne za odpowiednią implementacja interfejsu IQuerable.</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 85032  -->
  <question type="multichoice">
    <name>
      <text>Wykorzystanie instrukcji using</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><span style="font-family: Calibri; font-size: medium;">W środowisku .NET kontrola wykorzystania pamięci przez tworzone obiekty jest zautomatyzowana, tzn. na ogół nie wymaga od programisty bezpośredniej ingerencji w kodzie programu. Są jednak od tej reguły wyjątki i czasami taka ingerencja jest potrzebna. Wybierz prawidłowe sformułowania – nieprawidłowe odpowiedzi mają przypisany współczynnik kary.</span></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>10.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>abc</answernumbering>
    <correctfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest poprawna.</p>]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest częściowo poprawna.</p>]]></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest niepoprawna.</p>]]></text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Obiekt jest natychmiast kasowany i zasoby z nim związane zwalniane, jeśli żadna zmienna programu nie ma do niego referencji.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To nie jest poprawna odpowiedz, ponieważ obiekt jest w takim przypadku kasowany automatycznie przez Garbage Collector, co jest realizowane z opóźnieniem od nas praktycznie niezależnym.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>Obiekt jest natychmiast kasowany, a zasoby zwalniane, jeśli implementuje interfejs IDisposable, jest tworzony przez instrukcję using i zakończył się blok tej instrukcji.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Oczywiście to jest dobra odpowiedz. Using wywołuje Dispose po zakończeniu ostatniej instrukcji w swoim bloku.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>Obiekt jest natychmiast kasowany, a zasoby zwalniane, jeśli implementuje interfejs IDisposable i jest wykonana w naszym kodzie metoda Dispose z tego interfejsu.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Oczywiście to jest dobra odpowiedz. Nie jest niezbędne, a czasami niemożliwe wykorzystanie instrukcji using i w takim przypadku trzeba wywołać Dispose ręcznie.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="33.33333" format="html">
      <text><![CDATA[<p>Obiekt nie musi być ręcznie kasowany za pośrednictwem metody IDisposable.Dispose lub poprzez użycie instrukcji using jeśli za pośrednictwem innych metod tego obiektu zwolnimy zasoby zewnętrzne, np. Stream.Close.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Oczywiście to jest dobra odpowiedz. Zasadniczą sprawą jest zwolnienie zasobów, by ich niepotrzebnie nie blokować, a zwolnienie pamięci może być realizowane na ogólnych zasadach.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Jeśli jeden obiekt opakowuje (tworzy) inny obiekt dziedziczący po klasie IDisposable, musi on implementować interfejs IDisposable, jak w przykładzie poniżej:</p>
<p>class UsingIDisposable: IDisposable</p>
<p>{</p>
<p>private Stream m_Stream;</p>
<p>//</p>
<p>//....</p>
<p>//</p>
<p>}</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Jeśli m_Stream jest kasowany ręcznie w obiekcie go tworzącym, to implementacja IDisposable nie jest potrzebna. To jest zła odpowiedź, choć są przypadki, kiedy takie podejście jest poprawne.</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 85034  -->
  <question type="multichoice">
    <name>
      <text>Zdarzenia</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Zdarzenie to konstrukcja językowa, którą wykorzystujemy do sygnalizowania wystąpienia wybranych warunków. Które z poniższych stwierdzeń są prawdziwe.</p>
<address><span style="font-family: Calibri;"><span style="font-size: medium;">Uwaga: </span>Nieprawidłowe odpowiedzi są karane punktami ujemnymi.</span></address>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>8.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <single>false</single>
    <shuffleanswers>true</shuffleanswers>
    <answernumbering>abc</answernumbering>
    <correctfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest poprawna.</p>]]></text>
    </correctfeedback>
    <partiallycorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest częściowo poprawna.</p>]]></text>
    </partiallycorrectfeedback>
    <incorrectfeedback format="html">
      <text><![CDATA[<p>Twoja odpowiedź jest niepoprawna.</p>]]></text>
    </incorrectfeedback>
    <shownumcorrect/>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Metody subskrybentów są wywoływane w chwili spełnienia warunku, który ma być sygnalizowany.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Żle, do wywołania zasubskrybowanych metod wymagana jest instrukcja, a spełnienie warunku to jedynie wynik z wyznaczenia wartości wyrażenia.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="100" format="html">
      <text><![CDATA[<p>Wywołanie zdarzenia wymaga instrukcji o składni wywołania metody, która uruchamia wszystkie metody subskrybentów.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To poprawna odpowiedz, wszystkie metody z parametrami aktualnymi zgodnie z deklaracją typu delegacyjnego.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Poprawność wywołania zdarzenia jest możliwa, ponieważ zdarzenie ma zdefiniowany typ wartości zwracanej przez metody subskrybujące.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>To zła odpowiedź, dla wszystkich metod muszą być podane parametry aktualne, których o typach zgodnych z definicją typu delegacyjnego.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="-33.33333" format="html">
      <text><![CDATA[<p>Po zainicjowaniu zdarzenia wszystkie zasubskrybowane metody są wykonywane niezależnie w stosunku do sekwencji instrukcji publikatora, tzn. wykonanie instrukcji następującej po zainicjowaniu zdarzenia może nastąpić przez lub w trakcie zakończeniem zasubskrybowanych metod.</p>]]></text>
      <feedback format="html">
        <text><![CDATA[<p>Wszystkie metody są wykonywane w sekwencji instrukcji wywołującej, więc muszą się zakończyć przez rozpoczęciem następnej instrukcji.</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 0  -->
  <question type="category">
    <category>
        <text>$course$/Domyślnie dla TP/Kolokwium/Łatwe</text>

    </category>
  </question>

<!-- question: 85050  -->
  <question type="shortanswer">
    <name>
      <text>Polimorfizm</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Wykazywanie różnej funkcjonalności podczas wywoływania metody, w zależności od typu obiektu, na rzecz którego wywołana została dana metoda nazywamy:</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>0.3333333</penalty>
    <hidden>0</hidden>
    <usecase>0</usecase>
    <answer fraction="100" format="moodle_auto_format">
      <text>polimorfi*</text>
      <feedback format="html">
        <text><![CDATA[<p>To polimorfizm, który pozwala zaimplementować tą samą metodę w różny sposób.</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 85035  -->
  <question type="truefalse">
    <name>
      <text>Co to jest wyrażenie lambda</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Wyrażenie lambda to konstrukcja, która pozwala zdefiniować metodę i określić referencję do niej. Referencja ta może być następnie podstawiona do zmiennej delegacyjnej lub dodana do zdarzenia.</p>
<p> </p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text><![CDATA[<p>To dobra odpowiedz.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text><![CDATA[<p>NIeststety ta definicja jest prawdziwa.</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 85037  -->
  <question type="truefalse">
    <name>
      <text>Implementacja metody abstrakcyjnej</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Implementacja właściwości i metod w klasach pochodnych to podstawy sposób programowania polimorficznego.  Więc jedyną metodą zaimplementowania właściwości lub metody abstrakcyjnej jest dziedziczenie i nadpisanie definicji w klasie dziedziczącej.</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <answer fraction="100" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text><![CDATA[<p>Tok to prawda. Aby zaimplementować właściwość lub metodę abstrakcyjną, trzeb zdefiniować ich bloki. To można zrobić tylko we właściwościach i metodach instancji lub statycznych, a statyczne nie mogą być wykorzystane do osiągnięcia polimorfizmu, bo są statyczne.</p>]]></text>
      </feedback>
    </answer>
    <answer fraction="0" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text><![CDATA[<p>No niestety, aby zaimplementować właściwość lub metodę abstrakcyjną, trzeb zdefiniować ich bloki. To można zrobić tylko we właściwościach i metodach instancji lub statycznych, a statyczne nie mogą być wykorzystane do osiągnięcia polimorfizmu, bo są statyczne.</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 85038  -->
  <question type="truefalse">
    <name>
      <text>Klasy i metody częściowe</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p><span style="font-family: Calibri; font-size: medium;">Podobnie jak w klasie abstrakcyjnej, w klasie częściowej wszystkie metody częściowe (zdefiniowano dla nich tylko nagłówek) muszą być zaimplementowane, by klasa mogła być wykorzystana do tworzenia obiektów. </span></p>
<p> </p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text><![CDATA[<p><span style="font-family: Calibri; font-size: medium;">Niestety, prawdą jest to, że metody częściowe, dla których nie zdefiniowano bloku instrukcji są z kodu usuwane, więc nie muszą być zaimplementowane.</span></p>]]></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text><![CDATA[<p><span style="font-family: Calibri; font-size: medium;">Tak, to nie jest prawda; metody częściowe, dla których nie zdefiniowano bloku instrukcji są z kodu usuwane, więc nie muszą być zaimplementowane.</span></p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 85051  -->
  <question type="truefalse">
    <name>
      <text>LINQ rozszerzanie</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>LINQ to rozszerzalna (adoptowalna do indywidualnych potrzeb, np. zapewnienie dostępu do własnych źródeł danych) technologia, w które zdefiniowano metody rozszerzające interfejsy IEnumerable i IQuerable.  Aby ją rozszerzyć trzeba zdefiniować własne metody rozszerzające te interfejsy.</p>
<p> </p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text><![CDATA[<p style="margin: 0cm 0cm 10pt;"><span lang="PL"><span style="font-family: Calibri; font-size: medium;">Nie, to nie jest prawda, ponieważ j<span lang="PL">edyną możliwością rozszerzenia tej technologii jest własna implementacja interfejsu IQuerable.</span></span></span></p>]]></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text><![CDATA[<p>Tak to nie jest prawda, ponieważ j<span lang="PL">edyną możliwością rozszerzenia tej technologii jest własna implementacja interfejsu IQuerable.</span></p>
<p> </p>
<p> </p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 85036  -->
  <question type="truefalse">
    <name>
      <text>Metoda rozszerzająca a dziedziczeniem.</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Metody rozszerzające są szczególnie przydatne w sytuacji, kiedy trzeba zaimplementować metody abstrakcyjne w typie, do którego nie mamy dostępu, np. jest zdefiniowany w bibliotece .NET.</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text><![CDATA[<p><span style="font-family: Calibri; font-size: medium;">Metody rozszerzające nigdy nie mogą być użyte do implementacji metod abstrakcyjnych zdefiniowanych w klasach abstrakcyjnych lub interfejsach.</span></p>
<p> </p>]]></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text><![CDATA[<p>Tak, to dobra odpowiedź. Metody rozszerzające nigdy nie mogą być użyte do implementacji metod abstrakcyjnych zdefiniowanych w klasach abstrakcyjnych lub interfejsach.</p>]]></text>
      </feedback>
    </answer>
  </question>

<!-- question: 85033  -->
  <question type="truefalse">
    <name>
      <text>Zmienna delegacyjna</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Zmienna delegacyjna przechowuje referencję do wyrażenia, które określa jej wartość.</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>2.0000000</defaultgrade>
    <penalty>1.0000000</penalty>
    <hidden>0</hidden>
    <answer fraction="0" format="moodle_auto_format">
      <text>true</text>
      <feedback format="html">
        <text><![CDATA[<p><span style="line-height: 115%; font-family: 'Calibri','sans-serif'; font-size: 11pt; mso-ansi-language: PL; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;" lang="PL">Jej wartością jest referencja do metody, a nie do wyrażenia.</span></p>]]></text>
      </feedback>
    </answer>
    <answer fraction="100" format="moodle_auto_format">
      <text>false</text>
      <feedback format="html">
        <text><![CDATA[<p><span style="font-family: Calibri; font-size: medium;">OK, to dobra odpowiedź.</span></p>]]></text>
      </feedback>
    </answer>
  </question>

</quiz>